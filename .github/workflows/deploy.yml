name: Build and Deploy Client

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Next.js application
        run: pnpm run build
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image and save as tar
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ci
          push: false
          tags: splendor-client-image:latest
          outputs: type=docker,dest=image.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Copy image to server
        run: scp image.tar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/root/splendor-client/

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/splendor-client
            
            # 保存日志
            mkdir -p logs
            docker-compose logs > logs/backup-$(date +%Y%m%d-%H%M%S).log || true

            # 停止现有服务
            docker-compose down || true
            
            # 加载新镜像
            docker load < image.tar
            
            # 使用新镜像启动服务
            docker-compose up -d
            
            # 清理临时文件
            rm image.tar
            
            echo "Deployment completed successfully!" 